
@model SportsStore.ViewModels.ProductViewModel


@{
    ViewBag.Title = (Model.ProductId==0)?"Create Product": "Edit Product";
    ViewBag.Active = "Product";
}

<h2>@ViewBag.Title</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ProductId)

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
            </div>
        </div>
   
        <div class="form-group">
                <div class="col-sm-offset-2 col-md-10">
                    <div class="checkbox">
                        <label>
                            @Html.EditorFor(model => model.InStock)
                            @Html.DisplayNameFor(model => model.InStock)
                        </label>
                        @Html.ValidationMessageFor(model => model.InStock, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Availability, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                    @Html.EnumDropDownListFor(model=>model.Availability, new { @class = "form-control"}) 
                    @Html.ValidationMessageFor(model => model.Availability, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AvailableTill, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                    @Html.EditorFor(model => model.AvailableTill, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.AvailableTill, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CategoryId, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                    @Html.DropDownListFor(model => model.CategoryId, ViewBag.Categories as SelectList,
                        "--select category--", new {@class = "form-control"})
                    @Html.ValidationMessageFor(model => model.CategoryId, "", new {@class = "text-danger"})
            </div>
        </div>


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
